"use strict";(twitchFCC=window.twitchFCC=window.twitchFCC||{}).fetchApi={init:function(){PubSub.subscribe("GET_API_DATA",twitchFCC.fetchApi.fetchStreamData.bind(this))},streams:[],checkTotalStreams:function(t){this.streams.length===t&&PubSub.publish("API_DATA_RECEIVED",this.streams)},fetchStreamData:function(t,i){var e=this;i.forEach(function(t){JSONP({url:"https://wind-bow.gomix.me/twitch-api/streams/"+t,success:function(s){var n={name:t,online:null!=s.stream,stream:s.stream||"OFFLINE"};e.streams.push(n),e.checkTotalStreams(i.length)},error:function(t){console.error("AN ERROR OCCURED IN YOUR REQUEST: "+t)}})},this)}},(twitchFCC=window.twitchFCC=window.twitchFCC||{}).streamListing={init:function(){PubSub.subscribe("GET_FORMATTED_DATA",this.formatData.bind(this)),PubSub.subscribe("APPEND_DATA",this.appendHTML.bind(this))},formatData:function(t,i){var e=i.map(function(t){return t.online?'<li class="streams_container--item online"><p><span class="item-title">Name</span>: <a href='+t.stream.channel.url+' target="_blank">'+t.name+'</a></p><p><span class="item-title">Status</span>: ONLINE </p><p><span class="item-title">Playing</span>: '+t.stream.game+" - "+t.stream.channel.status+"</p></li>":'<li class="streams_container--item offline"><p><span class="item-title">Name</span>: '+t.name+'</p><p><span class="item-title">Status</span>: OFFLINE </p></li>'});PubSub.publish("FORMATTED_DATA_RECEIVED",e)},appendHTML:function(t,i){document.querySelector(i.target).insertAdjacentHTML("beforeend",i.htmlArr.join(""))}},(twitchFCC=window.twitchFCC=window.twitchFCC||{}).filters={init:function(){document.querySelector(".filters").addEventListener("click",this.filtersClickListener.bind(this))},filtersClickListener:function(t){var i=t.target.id;"span"===t.target.nodeName.toLowerCase()&&(this.setActiveFilter(i),this.filterList(i))},setActiveFilter:function(t){var i=document.querySelector(".active"),e=document.querySelector("#"+t);i.classList.contains(t)||(i.classList.remove("active"),e.classList.add("active"))},filterList:function(t){var i=t.split("--")[1],e=document.querySelectorAll(".streams_container--item");switch(i){case"all":e.forEach(function(t){t.classList.contains("hide")&&t.classList.remove("hide")});break;case"online":e.forEach(function(t){t.classList.contains("offline")?t.classList.add("hide"):t.classList.contains("online")&&t.classList.remove("hide")});break;case"offline":e.forEach(function(t){t.classList.contains("online")?t.classList.add("hide"):t.classList.contains("offline")&&t.classList.remove("hide")})}}};var twitchFCC=window.twitchFCC=window.twitchFCC||{};window.addEventListener("DOMContentLoaded",function(t){twitchFCC.streamListing.init(),twitchFCC.fetchApi.init(),twitchFCC.filters.init(),PubSub.subscribe("API_DATA_RECEIVED",apiDataReceived),PubSub.subscribe("FORMATTED_DATA_RECEIVED",formattedDataReceived),PubSub.publish("GET_API_DATA",["freecodecamp","ESL_SC2","OgamingSC2","storbeck","noobs2ninjas","RobotCaleb"])});var apiDataReceived=function(t,i){PubSub.publish("GET_FORMATTED_DATA",i)},formattedDataReceived=function(t,i){var e={htmlArr:i,target:".streams_container"};PubSub.publish("APPEND_DATA",e)};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
